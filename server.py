from flask import Flask, jsonify, request
import torch
from utils import merge_ids_and_amounts

class Server:
    def __init__(self, model):
        self.model = model
        self.app = Flask(__name__)
        self.setup_routes()
        
    def setup_routes(self):
        @self.app.route("/")
        def home():
            return jsonify({"message": "Welcome to the NutriPlan API!"})

        @self.app.route("/greet")
        def greet():
            name = request.args.get("name", "Guest")

            return jsonify({"message": f"Hello, {name}!"})
        
        @self.app.route("/help", methods=["GET"])
        def help():
            return jsonify({
                "message": "This is a simple server for the NutriPlan API.",
                "routes": {
                    "/": "Welcome message",
                    "/greet": "Greeting endpoint",
                    "/predict": "Predict endpoint for menu generation",
                    "/predict/help": "Help for the predict endpoint"
                }
            })

        @self.app.route("/predict", methods=["POST"])
        def predict():
            data = request.json

            vec = []

            for key in data:
                vec.append(data[key])

            vec = torch.tensor([vec], dtype=torch.float32)

            pred_id, pred_amount = self.model(vec)

            pred_id, pred_amount = pred_id[0], pred_amount[0]

            pred_id = torch.argmax(pred_id, dim=-1)

            pred_amount = pred_amount.squeeze(-1)

            merged_pred = merge_ids_and_amounts(pred_id, pred_amount)

            return jsonify({"output": merged_pred.tolist()})
        
        @self.app.route("/predict/help", methods=["GET"])
        def predict_help():
            return jsonify({
                "message": "This endpoint generates a menu based on the provided input.",
                "request_example": {
                    {
                        "calories": 2826.6875,
                        "carbohydrates": 326.16,
                        "sugar": 27.18,
                        "fat": 72.48,
                        "protein": 190.26,
                        "vegeterian": 0,
                        "vegan": 0,
                        "eggs": 1,
                        "milk": 1,
                        "nuts": 1,
                        "fish": 1,
                        "sesame": 1,
                        "soy": 1,
                        "gluten": 1
                    }
                },
                "response_example": {
                    {"output":[[[[42.0,13.933032035827637],[4.0,14.309616088867188],[4.0,14.203309059143066],[0.0,0.0],[0.0,13.252395629882812],[0.0,11.062251091003418],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[18.0,14.462761878967285],[19.0,14.907793998718262],[0.0,14.3008451461792],[0.0,13.70097541809082],[0.0,12.370650291442871],[0.0,0.0],[0.0,10.917688369750977],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[6.0,15.129584312438965],[68.0,15.416242599487305],[0.0,12.465245246887207],[0.0,12.934995651245117],[0.0,14.188788414001465],[0.0,13.16379165649414],[0.0,9.995168685913086],[0.0,0.0],[0.0,0.0],[0.0,0.0]]],[[[51.0,14.783370971679688],[0.0,13.05447769165039],[0.0,12.953089714050293],[0.0,13.26140022277832],[0.0,13.432106018066406],[0.0,12.372332572937012],[0.0,4.3974080085754395],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[41.0,16.72431182861328],[40.0,12.562019348144531],[65.0,12.41262149810791],[0.0,12.843911170959473],[0.0,12.746604919433594],[0.0,12.54095458984375],[0.0,13.24844741821289],[0.0,12.454507827758789],[0.0,12.535679817199707],[0.0,11.47896671295166]],[[21.0,15.810643196105957],[77.0,14.503849983215332],[60.0,14.009058952331543],[34.0,12.535476684570312],[0.0,12.61406135559082],[0.0,0.0],[0.0,12.717999458312988],[0.0,10.504667282104492],[0.0,11.284049034118652],[0.0,10.65622329711914]]],[[[51.0,15.199287414550781],[17.0,14.177536010742188],[4.0,14.894651412963867],[0.0,13.226959228515625],[0.0,12.838163375854492],[0.0,11.972926139831543],[0.0,13.292037963867188],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[116.0,15.160089492797852],[42.0,13.95054817199707],[33.0,13.0281343460083],[0.0,13.485550880432129],[0.0,13.136316299438477],[0.0,12.942955017089844],[0.0,11.867513656616211],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[21.0,0.0],[21.0,15.249028205871582],[72.0,13.560614585876465],[16.0,13.594069480895996],[85.0,13.86952018737793],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]]],[[[61.0,13.893752098083496],[61.0,16.388784408569336],[61.0,14.935131072998047],[0.0,14.379666328430176],[0.0,12.693985939025879],[0.0,12.710101127624512],[0.0,10.24246597290039],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[87.0,15.081188201904297],[88.0,13.897367477416992],[89.0,13.556136131286621],[33.0,14.309168815612793],[0.0,0.0],[0.0,0.0],[0.0,12.22801399230957],[0.0,12.281068801879883],[0.0,12.381847381591797],[0.0,11.40833568572998]],[[56.0,16.595577239990234],[49.0,15.099266052246094],[0.0,15.021008491516113],[0.0,14.275615692138672],[0.0,12.56877326965332],[0.0,13.172820091247559],[0.0,10.675379753112793],[0.0,0.0],[0.0,0.0],[0.0,0.0]]],[[[61.0,14.261092185974121],[61.0,12.845746994018555],[16.0,14.354217529296875],[0.0,0.0],[0.0,13.266658782958984],[0.0,11.77915096282959],[0.0,0.0],[0.0,0.0],[0.0,3.187368392944336],[0.0,0.0]],[[116.0,15.269307136535645],[33.0,13.918408393859863],[90.0,0.0],[0.0,13.398914337158203],[0.0,12.634010314941406],[0.0,11.756017684936523],[0.0,12.48874568939209],[0.0,10.36325454711914],[0.0,5.133238792419434],[0.0,0.0]],[[194.0,14.532154083251953],[77.0,15.396625518798828],[10.0,13.28921127319336],[0.0,11.12109375],[0.0,14.038580894470215],[0.0,10.372523307800293],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]]],[[[131.0,14.675978660583496],[64.0,14.590970993041992],[0.0,12.79162883758545],[0.0,12.160344123840332],[0.0,12.954718589782715],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[26.0,15.078198432922363],[33.0,13.44985294342041],[0.0,13.360244750976562],[0.0,13.349267959594727],[0.0,13.602245330810547],[0.0,13.328420639038086],[0.0,13.040553092956543],[0.0,11.603184700012207],[0.0,10.995534896850586],[0.0,0.0]],[[101.0,15.055649757385254],[102.0,15.803744316101074],[103.0,14.165824890136719],[0.0,14.046745300292969],[0.0,13.080224990844727],[0.0,12.41356086730957],[0.0,6.224471569061279],[0.0,5.049675464630127],[0.0,0.0],[0.0,0.0]]],[[[108.0,15.972454071044922],[42.0,14.24004077911377],[59.0,13.82663631439209],[0.0,13.261689186096191],[0.0,12.44780158996582],[0.0,12.452644348144531],[0.0,13.083395004272461],[0.0,9.702890396118164],[0.0,11.364715576171875],[0.0,0.0]],[[73.0,16.330753326416016],[76.0,13.395828247070312],[33.0,13.300863265991211],[90.0,14.23075008392334],[0.0,0.0],[0.0,11.527215003967285],[0.0,12.317122459411621],[0.0,13.022515296936035],[0.0,11.06572151184082],[0.0,7.029631614685059]],[[49.0,14.366789817810059],[107.0,15.067780494689941],[41.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,12.59926700592041],[0.0,11.816184043884277],[0.0,12.410745620727539],[0.0,0.0],[0.0,0.0]]]]}
                }
            })

    def run(self, host="0.0.0.0", port=5000):
        self.app.run(host=host, port=port, debug=False)
